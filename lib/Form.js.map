{"version":3,"sources":["../src/Form.js"],"names":["createForm","validateId","WrappedComponent","options","Form","props","formdata","metadata","getInputProps","bind","handleChange","handleValidateChange","isInputValidating","validateAllInputs","getNameValues","getInputErrors","cachedFunctions","mapPropsToFormData","nextProps","name","value","getValue","newInputs","onChange","forceUpdate","initialValue","undefined","nameValueMap","Object","keys","forEach","input","getInput","errors","filter","validates","isValidating","trigger","event","console","log","newInput","target","dirty","validateInput","setInputs","callback","meta","validate","triggers","includes","length","currentValidateId","namevalues","description","rules","onlyFirst","push","validator","errMap","names","errorMap","allErrMap","getNameNeededValidated","validateInputs","fn","namedCachedFuncs","inputProps","getCachedFunction","hasOwnProperty","childContextTypes","func"],"mappings":"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","file":"Form.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport Validator from './Validator';\n\n// 当触发异步验证的时候，可能会在短时间内多次触发，使用该ID确保返回的是正确的验证回调\nlet validateId = 0;\n\nexport default function createForm(WrappedComponent, options = {}) {\n  class Form extends Component {\n    constructor(props) {\n      super(props);\n      this.formdata = {};\n      this.metadata = {};\n      this.getInputProps = this.getInputProps.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleValidateChange = this.handleValidateChange.bind(this);\n      this.isInputValidating = this.isInputValidating.bind(this);\n      this.validateAllInputs = this.validateAllInputs.bind(this);\n      this.getNameValues = this.getNameValues.bind(this);\n      this.getInputErrors = this.getInputErrors.bind(this);\n      this.cachedFunctions = {};\n\n      if (options.mapPropsToFormData) {\n        this.formdata = options.mapPropsToFormData(props);\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (options.mapPropsToFormData) {\n        this.formdata = options.mapPropsToFormData(nextProps);\n      }\n    }\n\n    getChildContext() {\n      return {\n        isInputValidating: this.isInputValidating,\n        validateAllInputs: this.validateAllInputs,\n        getNameValues: this.getNameValues,\n        getInputErrors: this.getInputErrors,\n      };\n    }\n\n    getInput(name) {\n      return {\n        name,\n        value: this.getValue(name),\n        ...this.formdata[name],\n      };\n    }\n\n    setInputs(newInputs) {\n      this.formdata = {\n        ...this.formdata,\n        ...newInputs,\n      }\n\n      if (options.onChange) {\n        options.onChange(this.formdata, this.props);\n      }\n\n      this.forceUpdate();\n    };\n\n    getValue(name) {\n      if (this.formdata[name] && (this.formdata[name].value != null)) {\n        return this.formdata[name].value;\n      }\n      if (this.metadata[name].initialValue != null) {\n        return this.metadata[name].initialValue;\n      }\n      // 最后 return '' 有待商榷\n      return undefined;\n    }\n\n    getNameValues() {\n      const nameValueMap = {};\n      Object.keys(this.formdata).forEach((name) => {\n        nameValueMap[name] = this.formdata[name].value;\n      });\n      return nameValueMap;\n    }\n\n    getInputErrors(name) {\n      const input = this.getInput(name);\n      if (input.errors) {\n        return input.errors;\n      }\n      return [];\n    }\n\n    getNameNeededValidated() {\n      return Object.keys(this.metadata).filter((name) => {\n        return !!this.metadata[name].validates;\n      });\n    }\n\n    isInputValidating(name) {\n      const input = this.getInput(name);\n      if (input.isValidating) {\n        return true;\n      }\n      return false;\n    }\n\n    handleValidateChange(name, trigger, event) {\n      console.log(this.formdata);\n      const newInput = this.getInput(name);\n      newInput.value = event.target.value;\n      newInput.dirty = true;\n      newInput.isValidating = true;\n      this.validateInput(newInput, trigger);\n    }\n\n    handleChange(name, trigger, event) {\n      const newInput = this.getInput(name);\n      newInput.value = event.target.value;\n      // 说明值发生了改变，如果 dirty 为 false，不需要触发验证\n      newInput.dirty = true;\n      newInput.isValidating = false;\n      this.setInputs({\n        [name]: newInput,\n      });\n    }\n\n    validateInput(input, trigger, callback) {\n      if (input.dirty === false) {\n        return;\n      }\n      const { name } = input;\n      // 调整参数\n      if (typeof trigger === 'function') {\n        callback = trigger;\n        trigger = undefined;\n      }\n      const meta = this.metadata[name];\n      let { validates } = meta;\n\n      if (trigger) {\n        validates = validates.filter((validate) => {\n          if (!validate.triggers) {\n            return true;\n          } else if (validate.triggers.includes(trigger)) {\n            return true;\n          }\n          return false;\n        });\n      }\n\n      if (validates.length === 0) {\n        return;\n      }\n\n      const currentValidateId = validateId;\n      ++validateId;\n      meta.validateId = currentValidateId;\n      input.isValidating = true;\n      this.setInputs({\n        [name]: input,\n      });\n\n      const namevalues = this.getNameValues();\n      const description = {};\n      description[name] = {\n        rules: [],\n        onlyFirst: !!this.metadata[name].onlyFirst,\n      };\n      validates.forEach((validate) => {\n        const { rules } = validate;\n        description[name].rules.push(...rules);\n      });\n      const validator = new Validator(description);\n      validator.validate(namevalues, (errMap, namevalues) => {\n        if (currentValidateId === this.metadata[name].validateId) {\n          callback && callback(errMap, namevalues);\n          const newInput = this.getInput(name);\n          newInput.isValidating = false;\n          newInput.dirty = false;\n          newInput.errors = errMap[name];\n          this.setInputs({\n            [name]: newInput,\n          });\n        }\n      });\n    }\n\n    validateInputs(names, callback) {\n      const newInputs = {};\n      // 形成了闭包\n      const currentValidateId = validateId;\n      ++validateId;\n      names.forEach((name) => {\n        const newInput = this.getInput(name);\n        if (newInput.dirty === false) {\n          return;\n        }\n        newInput.isValidating = true;\n        newInputs[name] = newInput;\n        this.metadata[name].validateId = currentValidateId;\n      });\n      this.setInputs(newInputs);\n      const namevalues = this.getNameValues();\n      const description = {};\n      // 新增了一个策略，onlyFirst: 顺序进行 rule 的检验，发现一个错误就停止\n      Object.keys(this.metadata).forEach((name) => {\n        description[name] = {\n          rules: [],\n          onlyFirst: !!this.metadata[name].onlyFirst,\n        };\n        const { validates } = this.metadata[name];\n        validates.forEach((validate) => {\n          const { rules } = validate;\n          description[name].rules.push(...rules);\n        });\n      });\n      const validator = new Validator(description);\n      validator.validate(namevalues, (errorMap, namevalues) => {\n        const newInputs = {};\n        names.forEach((name) => {\n          if (currentValidateId === this.metadata[name].validateId) {\n            const newInput = this.getInput(name);\n            newInput.isValidating = false;\n            newInput.dirty = false;\n            newInputs[name] = newInput;\n            newInput.errors = errorMap[name];\n          }\n        });\n        // 有些值不是脏值，但是之前出现过错误的，回调的时候也要把错误重新传出去\n        this.setInputs(newInputs);\n        const allErrMap = {};\n        names.forEach((name) => {\n          const input = this.getInput(name);\n          allErrMap[name] = input.errors || [];\n        });\n        callback(allErrMap, namevalues);\n      });\n    }\n\n    validateAllInputs(callback) {\n      const names = this.getNameNeededValidated();\n      this.validateInputs(names, callback);\n    }\n\n    getCachedFunction(name, trigger, fn) {\n      const namedCachedFuncs = this.cachedFunctions[name] = this.cachedFunctions[name] || {};\n      if (!namedCachedFuncs[trigger]) {\n        namedCachedFuncs[trigger] = fn.bind(this, name, trigger);\n      }\n      return namedCachedFuncs[trigger];\n    }\n\n    getInputProps(name, options) {\n      if (!this.metadata[name]) {\n        const meta = {};\n        const { validates, initialValue, onlyFirst } = options;\n        meta.initialValue = initialValue;\n        meta.validates = validates;\n        meta.onlyFirst = onlyFirst;\n        this.metadata[name] = meta;\n      }\n\n      const inputProps = {};\n      const { validates } = this.metadata[name];\n      validates.forEach((validate) => {\n        const triggers = validate.triggers || ['onChange'];\n        triggers.forEach((trigger) => {\n          inputProps[trigger] = this.getCachedFunction(name, trigger, this.handleValidateChange);\n        });\n      });\n\n      if (!inputProps.hasOwnProperty('onChange')) {\n        inputProps['onChange'] = this.getCachedFunction(name, 'onChange', this.handleChange);\n      }\n\n      return {\n        name,\n        value: this.getValue(name),\n        ...inputProps,\n      };\n    }\n\n    render() {\n      const props = {\n        getInputProps: this.getInputProps,\n        validateAllInputs: this.validateAllInputs,\n        getNameValues: this.getNameValues,\n      };\n\n      return <WrappedComponent {...this.props} form={props} />\n    }\n  }\n\n  Form.childContextTypes = {\n    isInputValidating: PropTypes.func,\n    validateAllInputs: PropTypes.func,\n    getNameValues: PropTypes.func,\n    getInputErrors: PropTypes.func,\n  }\n\n  return Form;\n}\n"]}