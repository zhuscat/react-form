{"version":3,"sources":["../src/FormItem.js"],"names":["STATUS_OK","STATUS_VALIDATING","STATUS_ERROR","propTypes","className","string","infoClassName","okClassName","validatingClassName","errorClassName","defaultProps","FormItem","isValidating","context","isInputValidating","props","children","name","errors","getInputErrors","length","status","getInputStatus","wrapperClassName","indicatorClassName","position","errorStr","filter","error","map","message","join","renderField","renderError","contextTypes","func"],"mappings":"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","file":"FormItem.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nconst STATUS_OK = 0;\nconst STATUS_VALIDATING = 1;\nconst STATUS_ERROR = 2;\n\nconst propTypes = {\n  className: PropTypes.string,\n  infoClassName: PropTypes.string,\n  okClassName: PropTypes.string,\n  validatingClassName: PropTypes.string,\n  errorClassName: PropTypes.string,\n};\n\nconst defaultProps = {\n  className: 'zc-form-item',\n  infoClassName: 'zc-form-item-info',\n  okClassName: '',\n  validatingClassName: '',\n  errorClassName: '',\n}\n\nexport default class FormItem extends Component {\n  getInputStatus() {\n    const isValidating = this.context.isInputValidating(this.props.children.props.name);\n    const errors = this.context.getInputErrors(this.props.children.props.name);\n    if (isValidating) {\n      return STATUS_VALIDATING;\n    } else if (errors.length > 0) {\n      return STATUS_ERROR;\n    }\n    return STATUS_OK;\n  }\n\n  renderField() {\n    const status = this.getInputStatus();\n    // TODO: still need to improve the code\n    let wrapperClassName;\n    switch (status) {\n      case STATUS_OK:\n        wrapperClassName = 'status-ok';\n      case STATUS_VALIDATING:\n        wrapperClassName = 'status-validating';\n      case STATUS_ERROR:\n        wrapperClassName = 'status-error';\n    }\n    let indicatorClassName = '';\n    switch (status) {\n      case STATUS_OK:\n        indicatorClassName = this.props.okClassName;\n      case STATUS_VALIDATING:\n        indicatorClassName = this.props.validatingClassName;\n      case STATUS_ERROR:\n        indicatorClassName = this.props.errorClassName;\n    }\n    return (\n      <div className={wrapperClassName} style={{ position: 'relative' }}>\n        {this.props.children}\n        <i className={indicatorClassName} />\n      </div>\n    );\n  }\n\n  renderError() {\n    if (this.getInputStatus() === STATUS_ERROR) {\n      const errors = this.context.getInputErrors(this.props.children.props.name);\n      const errorStr = errors.filter((error) => {\n        return !!error;\n      }).map((error) => {\n        return error.message;\n      }).join(', ');\n      return (\n        <div style={{ position: 'relative' }}>\n          <span className={this.props.infoClassName}>{errorStr}</span>\n        </div>\n      );\n    }\n    return '';\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.renderField()}\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n\nFormItem.propTypes = propTypes;\nFormItem.defaultProps = defaultProps;\n\nFormItem.contextTypes = {\n  isInputValidating: PropTypes.func,\n  getInputErrors: PropTypes.func,\n}\n"]}