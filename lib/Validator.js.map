{"version":3,"sources":["../src/Validator.js"],"names":["validateStrategy","once","func","arr","promise","Promise","resolve","reject","next","i","len","data","err","length","all","map","predefinedRule","required","value","rule","formdata","callback","Error","string","errors","undefined","push","Object","prototype","toString","call","max","min","combinedErrStr","join","number","array","Validator","description","normalizedDescription","_normalizeDescription","_getValidator","validator","keys","type","dumbValidator","validate","$this","rules","onlyFirst","name","dataArr","then","filter","errorMap","forEach","idx"],"mappings":"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","file":"Validator.js","sourcesContent":["/*\n * 结构命名\n * validates: validate[]\n * validate: { rules: [], triggers: [] }\n * rules: rule[]\n * rule: { required: true, validator: function, name: string }\n*/\n\n// 这里说明一下\n// 所有 validator 都是形如 (value, formdata, callback) => {} 形式的函数\n// 其中 callback 形如 (errorMap, formdata) => {}\n\n// 这里要提取出两个策略\n// 策略1 对于一个字段，运行所有 rule，然后 callback 传入错误\n// 策略2 对于一个字段，顺序执行 rule，一旦出现错误 callback 传入错误\n\nconst validateStrategy = {\n  once: (func, arr) => {\n    const promise = new Promise((resolve, reject) => {\n      const next = (i, len) => {\n        const data = arr[i];\n        func(data, (err) => {\n          if (err) {\n            resolve([err]);\n          } else if (i === len) {\n            resolve([]);\n          } else {\n            next(i + 1, len);\n          }\n        });\n      };\n      next(0, arr.length);\n    });\n    return promise;\n  },\n  all: (func, arr) => {\n    const promise = Promise.all(arr.map(data => {\n      return new Promise((resolve, reject) => {\n        func(data, (err) => {\n          resolve(err);\n        });\n      });\n    }));\n    return promise;\n  },\n};\n\nconst predefinedRule = {\n  required: (value, rule, formdata, callback) => {\n    if (value == null || value === '' || value.length === 0) {\n      callback(new Error('这是必须要填的参数', formdata));\n    } else {\n      callback();\n    }\n  },\n  string: (value, rule, formdata, callback) => {\n    const errors = [];\n\n    if (value === undefined || value === null || value === '' || value.length === 0) {\n      if (rule.required) {\n        errors.push('这是必须的字段');\n      }\n    } else if (Object.prototype.toString.call(value) !== '[object String]') {\n      errors.push('必须要是一个字符串');\n    } else {\n      if ((typeof rule.max === 'number') && (value.length > rule.max)) {\n        errors.push(`字符个数不能大于${rule.max}`);\n      }\n      if ((typeof rule.min === 'number') && (value.length < rule.min)) {\n        errors.push(`字符个数不能小于${rule.min}`);\n      }\n    }\n\n    const combinedErrStr = errors.join(',');\n    if (combinedErrStr.length > 0) {\n      callback(new Error(combinedErrStr));\n    } else {\n      callback();\n    }\n  },\n  number: (value, rule, formdata, callback) => {\n    const errors = [];\n\n    if (value === undefined || value === null || value === '' || value.length === 0) {\n      if (rule.required) {\n        errors.push('这是必须的字段');\n      }\n    } else if (Object.prototype.toString.call(value) !== '[object Number]') {\n      errors.push('必须要是一个数字');\n    } else {\n      if ((typeof rule.max === 'number') && (value > rule.max)) {\n        errors.push(`数字不能大于${rule.max}`);\n      }\n      if ((typeof rule.min === 'number') && (value < rule.min)) {\n        errors.push(`数字不能小于${rule.min}`);\n      }\n    }\n\n    const combinedErrStr = errors.join(',');\n    if (combinedErrStr.length > 0) {\n      callback(new Error(combinedErrStr));\n    } else {\n      callback();\n    }\n  },\n  array: (value, rule, formdata, callback) => {\n    const errors = [];\n\n    if (value === undefined || value === null || value === '' || value.length === 0) {\n      if (rule.required) {\n        errors.push('这是必须的字段');\n      }\n    } else if (Object.prototype.toString.call(value) !== '[object Array]') {\n      errors.push('必须是一个数组');\n    } else {\n      if ((typeof rule.max === 'number') && (value.length > rule.max)) {\n        errors.push(`不能选择多于${rule.max}的个数`);\n      }\n      if ((typeof rule.min === 'number') && (value.length < rule.min)) {\n        errors.push(`不能选择少于${rule.min}的个数`);\n      }\n    }\n\n    const combinedErrStr = errors.join(',');\n    if (combinedErrStr.length > 0) {\n      callback(new Error(combinedErrStr));\n    } else {\n      callback();\n    }\n  },\n}\n\nfunction Validator(description) {\n  const normalizedDescription = this._normalizeDescription(description);\n  this.description = normalizedDescription;\n};\n\nValidator.prototype._getValidator = function _getValidator(rule) {\n  if (typeof rule.validator === 'function') {\n    return rule.validator;\n  } else if (('required' in rule) && (Object.keys(rule).length === 1)) {\n    return predefinedRule['required'];\n  } else if (predefinedRule[rule.type]) {\n    return predefinedRule[rule.type];\n  }\n  const dumbValidator = (value, rule, formdata, callback) => {\n    callback();\n  }\n  return dumbValidator;\n}\n\nValidator.prototype._normalizeDescription = function _normalizeDescription(description) {\n  return description;\n};\n\nValidator.prototype.validate = function validate(formdata, callback) {\n  const $this = this;\n  // 未考虑 promise 的错误处理\n  Promise.all(Object.keys($this.description).map(name => {\n    let rules, onlyFirst;\n    // backward compatibility\n    if (Object.prototype.toString.call($this.description[name]) === '[object Array]') {\n      rules = $this.description[name];\n      onlyFirst = false;\n    } else {\n      rules = $this.description[name].rules;\n      onlyFirst = $this.description[name].onlyFirst;\n    }\n    const value = formdata[name];\n\n    const dataArr = rules.map((rule) => {\n      return {\n        value,\n        rule,\n        formdata,\n        validator: $this._getValidator(rule),\n      };\n    });\n\n    const func = (data, callback) => {\n      const { value, rule, formdata, validator } = data;\n      validator(value, rule, formdata, callback);\n    };\n\n    if (onlyFirst) {\n      return validateStrategy.once(func, dataArr);\n    } else {\n      return validateStrategy.all(func, dataArr)\n        .then(function(errors) {\n          return errors.filter((err) => {\n            if (err != null) {\n              return true;\n            }\n            return false;\n          });\n        });\n    }\n  })).then(function(errors) {\n    const errorMap = {};\n    Object.keys($this.description).forEach((name, idx) => {\n      errorMap[name] = errors[idx];\n    });\n    callback(errorMap, formdata);\n  });\n};\n\nexport default Validator;\n\nexport { validateStrategy };\n"]}